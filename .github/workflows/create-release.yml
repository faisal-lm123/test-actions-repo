# This is a workflow to create release on every push to a tag matching the pattern v*

name: Create Release

# Controls when the action will run. Triggers the workflow on tag push
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Translation Release
        env:
          API_ENDPOINT: ${{ secrets.ASSET_MANAGER_API_ENDPOINT }}
          API_KEY: ${{ secrets.ASSET_MANAGER_API_KEY }}
        run: |
          # Extract version from tag ref (removes refs/tags/ prefix)
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Sending version $VERSION to API"
          echo "Full ref: ${{ github.ref }}"
          echo "Extracted version: $VERSION"

          # Check if API credentials are configured
          if [[ -z "$API_ENDPOINT" || -z "$API_KEY" ]]; then
            echo "‚ö†Ô∏è  API_ENDPOINT or API_KEY not configured - skipping translation release"
            echo "To enable translation release, configure these secrets in your repository:"
            echo "- API_ENDPOINT: Your webhook endpoint URL"
            echo "- API_KEY: Your authorization token"
            exit 0
          fi

          # Make API call with version data
          echo "üì° Making API call to notify about release..."
          curl --location "$API_ENDPOINT" \
            --header 'Content-Type: application/json' \
            --header "Authorization: Bearer $API_KEY" \
            --data "{
              \"portal\": \"fleet\",
              \"version\": \"$VERSION\"
            }"

          if [ $? -eq 0 ]; then
            echo "‚úÖ Successfully notified translation API about release $VERSION"
          else
            echo "‚ùå Failed to notify translation API about release"
            exit 1
          fi
